{"version":3,"sources":["webpack:///./src/pages/page-2.tsx","webpack:///./src/styles/variables.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Container.tsx","webpack:///./src/styles/mixins.ts","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Page.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/styles/normalize.ts","webpack:///./src/components/Header.tsx","webpack:///./src/components/LayoutRoot.tsx","webpack:///./src/components/LayoutMain.tsx","webpack:///./src/layouts/index.tsx"],"names":["__webpack_exports__","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_layouts__WEBPACK_IMPORTED_MODULE_5__","_components_Page__WEBPACK_IMPORTED_MODULE_3__","_components_Container__WEBPACK_IMPORTED_MODULE_4__","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","__webpack_require__","d","heights","colors","brand","lilac","accent","success","warning","ui","bright","light","whisper","code","gray","dark","copy","calm","white","black","fonts","sansSerif","serif","monospace","breakpoints","xs","sm","md","lg","xl","widths","dimensions","fontSize","regular","large","headingSizes","h1","h2","h3","h4","lineHeight","heading","containerPadding","header","StaticQueryContext","react__WEBPACK_IMPORTED_MODULE_1___default","a","createContext","StaticQuery","props","Consumer","staticQueryData","data","query","render","children","graphql","Error","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_2___default","object","string","isRequired","func","StyledContainer","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","_styles_mixins__WEBPACK_IMPORTED_MODULE_4__","_styles_variables__WEBPACK_IMPORTED_MODULE_3__","_ref","className","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","getEmSize","size","_variables__WEBPACK_IMPORTED_MODULE_0__","m","module","exports","default","StyledPage","ProdPageRenderer","location","pageResources","_loader__WEBPACK_IMPORTED_MODULE_4__","getResourcesForPathnameSync","pathname","createElement","_page_renderer__WEBPACK_IMPORTED_MODULE_3__","assign","json","shape","normalize","variables","mixins","StyledHeader","styled_base_browser_esm","polished_es","HeaderInner","Container","name","styles","HomepageLink","gatsby_browser_entry","components_Header","title","core_browser_esm","StyledLayoutRoot","components_LayoutRoot","react","StyledLayoutMain","components_LayoutMain","Helmet_default","site","siteMetadata","meta","content","description","_991718019"],"mappings":"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","file":"component---src-pages-page-2-tsx-61110e7b8101cdb06f09.js","sourcesContent":["import * as React from 'react';\nimport { Link } from 'gatsby';\n\nimport Page from '../components/Page';\nimport Container from '../components/Container';\nimport IndexLayout from '../layouts';\n\nconst PageTwo = () => (\n  <IndexLayout>\n    <Page>\n      <Container>\n        <h1>Hi from the second page</h1>\n        <p>Welcome to page 2</p>\n        <ul>\n          <li>\n            <Link to=\"/a-markdown-page/\">Show me some Markdown!</Link>\n          </li>\n          <li>\n            <Link to=\"/\">Take me back home.</Link>\n          </li>\n        </ul>\n      </Container>\n    </Page>\n  </IndexLayout>\n);\n\nexport default PageTwo;\n","/* tslint:disable:max-line-length */\n\nexport const colors = {\n  brand: '#663399',\n  lilac: '#9d7cbf',\n  accent: '#ffb238',\n  success: '#37b635',\n  warning: '#ec1818',\n  ui: {\n    bright: '#e0d6eb',\n    light: '#f5f3f7',\n    whisper: '#fbfafc'\n  },\n  code: '#fcf6f0',\n  gray: {\n    dark: 'hsla(270, 17.119554496%, 0%, 0.92)',\n    copy: 'hsla(270, 15.797828016000002%, 0%, 0.88)',\n    calm: 'rgba(0, 0, 0, 0.54)'\n  },\n  white: '#fff',\n  black: '#000'\n};\n\nexport const fonts = {\n  sansSerif:\n    '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", Arial, sans-serif',\n  serif: 'Georgia, \"Times New Roman\", Times, serif',\n  monospace: 'Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace, monospace'\n};\n\nexport const breakpoints = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200\n};\n\nexport const widths = {\n  md: 720,\n  lg: 960,\n  xl: 1140\n};\n\nexport const dimensions = {\n  fontSize: {\n    regular: 16,\n    large: 18\n  },\n  headingSizes: {\n    h1: 2.441,\n    h2: 1.953,\n    h3: 1.563,\n    h4: 1.25\n  },\n  lineHeight: {\n    regular: 1.45,\n    heading: 1.2\n  },\n  containerPadding: 1.5\n};\n\nexport const heights = {\n  header: 60\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport { widths } from '../styles/variables';\nimport { getEmSize } from '../styles/mixins';\n\nconst StyledContainer = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  width: auto;\n  max-width: ${getEmSize(widths.lg)}em;\n`;\n\ninterface ContainerProps {\n  className?: string;\n}\n\nconst Container: React.SFC<ContainerProps> = ({ children, className }) => (\n  <StyledContainer className={className}>{children}</StyledContainer>\n);\n\nexport default Container;\n","import { dimensions } from './variables';\n\nexport const getEmSize = (size: number) => size / dimensions.fontSize.regular;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport { dimensions } from '../styles/variables';\n\nconst StyledPage = styled.div`\n  display: block;\n  flex: 1;\n  position: relative;\n  padding: ${dimensions.containerPadding}rem;\n  margin-bottom: 3rem;\n`;\n\ninterface PageProps {\n  className?: string;\n}\n\nconst Page: React.SFC<PageProps> = ({ children, className }) => <StyledPage className={className}>{children}</StyledPage>;\n\nexport default Page;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { dimensions, fonts, colors, breakpoints } from './variables';\nimport { getEmSize } from './mixins';\n\nexport default `\n  html {\n    box-sizing: border-box;\n  }\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n\n  html {\n    font-size: ${dimensions.fontSize.regular}px !important;\n    line-height: ${dimensions.lineHeight.regular} !important;\n  }\n\n  body {\n    width: 100%;\n    overflow-x: hidden;\n    overflow-y: scroll;\n    font-family: ${fonts.sansSerif};\n    color: ${colors.black};\n    background-color: ${colors.white};\n    -webkit-text-size-adjust: 100%;\n    -ms-text-size-adjust: 100%;\n  }\n\n  a {\n    color: ${colors.brand};\n    text-decoration: none;\n\n    &:hover,\n    &:focus {\n      text-decoration: underline;\n    }\n  }\n\n  img {\n    max-width: 100%;\n    object-fit: contain;\n    position: relative;\n  }\n\n  figure {\n    margin: 2rem 0;\n  }\n\n  figcaption {\n    font-size: 80%;\n  }\n\n  table {\n    width: 100%;\n    margin-bottom: 1rem;\n    border: 1px solid ${colors.ui.light};\n    font-size: 85%;\n    border-collapse: collapse;\n  }\n\n  td,\n  th {\n    padding: .25rem .5rem;\n    border: 1px solid ${colors.ui.light};\n  }\n\n  th {\n    text-align: left;\n  }\n\n  tbody {\n    tr {\n      &:nth-of-type(odd) {\n        td {\n          background-color: ${colors.ui.whisper};\n        }\n        tr {\n          background-color: ${colors.ui.whisper};\n        }\n      }\n    }\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    margin-top: 1.414rem;\n    margin-bottom: .5rem;\n    color: ${colors.black};\n    font-weight: 600;\n    line-height: ${dimensions.lineHeight.heading};\n    text-rendering: optimizeLegibility;\n  }\n\n  h1 {\n    margin-top: 0;\n    font-size: ${dimensions.headingSizes.h1}rem;\n  }\n\n  h2 {\n    font-size: ${dimensions.headingSizes.h2}rem;\n  }\n\n  h3 {\n    font-size: ${dimensions.headingSizes.h3}rem;\n  }\n\n  h4, h5, h6 {\n    font-size: ${dimensions.headingSizes.h4}rem;\n  }\n\n  p {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n  strong {\n    color: ${colors.black};\n  }\n\n  ul,\n  ol,\n  dl {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n  dt {\n    font-weight: bold;\n  }\n\n  dd {\n    margin-bottom: .5rem;\n  }\n\n  hr {\n    position: relative;\n    margin: 1.5rem 0;\n    border: 0;\n    border-top: 1px solid ${colors.ui.light};\n  }\n\n  blockquote {\n    margin: .8rem 0;\n    padding: .5rem 1rem;\n    border-left: .25rem solid ${colors.ui.light};\n    color: ${colors.gray.calm};\n\n    p {\n      &:last-child {\n        margin-bottom: 0;\n      }\n    }\n\n    @media (min-width: ${getEmSize(breakpoints.md)}em) {\n      padding-right: 5rem;\n      padding-left: 1.25rem;\n    }\n  }\n`;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { transparentize } from 'polished';\nimport { Link } from 'gatsby';\n\nimport { heights, dimensions, colors } from '../styles/variables';\nimport Container from './Container';\n\nconst StyledHeader = styled.header`\n  height: ${heights.header}px;\n  padding: 0 ${dimensions.containerPadding}rem;\n  background-color: ${colors.brand};\n  color: ${transparentize(0.5, colors.white)};\n`;\n\nconst HeaderInner = styled(Container)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 100%;\n`;\n\nconst HomepageLink = styled(Link)`\n  color: ${colors.white};\n  font-size: 1.5rem;\n  font-weight: 600;\n\n  &:hover,\n  &:focus {\n    text-decoration: none;\n  }\n`;\n\ninterface HeaderProps {\n  title: string;\n}\n\nconst Header: React.SFC<HeaderProps> = ({ title }) => (\n  <StyledHeader>\n    <HeaderInner>\n      <HomepageLink to=\"/\">{title}</HomepageLink>\n    </HeaderInner>\n  </StyledHeader>\n);\n\nexport default Header;\n","import * as React from 'react';\nimport { Global, css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport normalize from '../styles/normalize';\n\nconst StyledLayoutRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`;\n\ninterface LayoutRootProps {\n  className?: string;\n}\n\nconst LayoutRoot: React.SFC<LayoutRootProps> = ({ children, className }) => (\n  <>\n    <Global styles={() => css(normalize)} />\n    <StyledLayoutRoot className={className}>{children}</StyledLayoutRoot>\n  </>\n);\n\nexport default LayoutRoot;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nconst StyledLayoutMain = styled.main`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n\ninterface LayoutMainProps {\n  className?: string;\n}\n\nconst LayoutMain: React.SFC<LayoutMainProps> = ({ children, className }) => (\n  <StyledLayoutMain className={className}>{children}</StyledLayoutMain>\n);\n\nexport default LayoutMain;\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport 'modern-normalize';\nimport '../styles/normalize';\n\nimport Header from '../components/Header';\nimport LayoutRoot from '../components/LayoutRoot';\nimport LayoutMain from '../components/LayoutMain';\n\ntype StaticQueryProps = {\n  site: {\n    siteMetadata: {\n      title: string;\n      description: string;\n    };\n  };\n};\n\nconst IndexLayout: React.SFC = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query IndexLayoutQuery {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `}\n    render={(data: StaticQueryProps) => (\n      <LayoutRoot>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: data.site.siteMetadata.description },\n            { name: 'keywords', content: 'gatsbyjs, gatsby, javascript, sample, something' }\n          ]}\n        />\n        <Header title={data.site.siteMetadata.title} />\n        <LayoutMain>{children}</LayoutMain>\n      </LayoutRoot>\n    )}\n  />\n);\n\nexport default IndexLayout;\n"],"sourceRoot":""}